2018-07-18 16:51:26,428 INFO [com.wms.Application] - Starting Application on DUDU-PC with PID 9548 (C:\Users\hasee\Desktop\panda\out\production\classes started by hasee in C:\Users\hasee\Desktop\panda)
2018-07-18 16:51:26,429 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2018-07-18 16:51:26,479 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@7d6cb217: startup date [Wed Jul 18 16:51:26 CST 2018]; root of context hierarchy
2018-07-18 16:51:28,051 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-18 16:51:29,100 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2018-07-18 16:51:29,109 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2018-07-18 16:51:29,118 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2018-07-18 16:51:29,120 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2018-07-18 16:51:29,214 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2018-07-18 16:51:29,297 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@7d6cb217: startup date [Wed Jul 18 16:51:26 CST 2018]; root of context hierarchy
2018-07-18 16:51:29,897 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-18 16:51:31,437 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2018-07-18 16:51:31,475 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-18 16:51:31,476 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-18 16:51:31,482 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2018-07-18 16:51:31,487 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2018-07-18 16:51:31,487 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2018-07-18 16:51:31,631 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2018-07-18 16:51:31,636 INFO [com.wms.Application] - Started Application in 6.408 seconds (JVM running for 8.412)
2018-07-18 16:52:21,800 INFO [com.wms.ui.example.controller.Example1] - I came into the manage page.
2018-07-18 16:52:37,551 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-16 20:58:22,476 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 4555 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-16 20:58:22,480 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-16 20:58:22,522 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@4c2d1467: startup date [Sat Mar 16 20:58:22 CST 2019]; root of context hierarchy
2019-03-16 20:58:24,096 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-16 20:58:24,892 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-16 20:58:24,939 INFO [org.springframework.jdbc.support.SQLErrorCodesFactory] - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-16 20:58:24,942 WARN [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'httpHandler' defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.server.reactive.HttpHandler]: Factory method 'httpHandler' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
2019-03-16 20:58:24,952 INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-16 20:58:24,957 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'httpHandler' defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.server.reactive.HttpHandler]: Factory method 'httpHandler' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:76)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:61)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.wms.Application.main(Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'httpHandler' defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.server.reactive.HttpHandler]: Factory method 'httpHandler' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.getHttpHandler(ReactiveWebServerApplicationContext.java:155)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.createWebServer(ReactiveWebServerApplicationContext.java:99)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:73)
	... 13 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.http.server.reactive.HttpHandler]: Factory method 'httpHandler' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 24 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:667)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1095)
	at org.springframework.web.server.adapter.WebHttpHandlerBuilder.applicationContext(WebHttpHandlerBuilder.java:161)
	at org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig.httpHandler(HttpHandlerAutoConfiguration.java:59)
	at org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig$$EnhancerBySpringCGLIB$$9bfd1cfe.CGLIB$httpHandler$0(<generated>)
	at org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig$$EnhancerBySpringCGLIB$$9bfd1cfe$$FastClassBySpringCGLIB$$5a886bf0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig$$EnhancerBySpringCGLIB$$9bfd1cfe.httpHandler(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration': Unsatisfied dependency expressed through field 'reactiveUserDetailsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:659)
	... 56 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDetailsService' defined in class path resource [com/wms/config/SecurityConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 72 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.wms.core.security.MapReactiveUserDetailsService]: Factory method 'userDetailsService' threw exception; nested exception is org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 84 more
Caused by: org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [select u.username,r.rname from t_authorities a inner join t_accounts u on a.account_id=u.id inner join t_roles r on a.role_id=r.id where u.username= 'admin']; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1402)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:388)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:446)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:456)
	at org.springframework.jdbc.core.JdbcTemplate.queryForList(JdbcTemplate.java:484)
	at com.wms.core.utils.jdbc.JdbcDao.queryForList(JdbcDao.java:44)
	at com.wms.core.security.UserDetailsUtil.getUsers(UserDetailsUtil.java:23)
	at com.wms.config.SecurityConfig.userDetailsService(SecurityConfig.java:33)
	at com.wms.config.SecurityConfig$$EnhancerBySpringCGLIB$$c3076c8d.CGLIB$userDetailsService$1(<generated>)
	at com.wms.config.SecurityConfig$$EnhancerBySpringCGLIB$$c3076c8d$$FastClassBySpringCGLIB$$111899d9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at com.wms.config.SecurityConfig$$EnhancerBySpringCGLIB$$c3076c8d.userDetailsService(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 85 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'r.rname' in 'field list'
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1381)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:433)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	... 101 more
2019-03-16 21:00:11,780 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 4883 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-16 21:00:11,781 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-16 21:00:11,820 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@68eea353: startup date [Sat Mar 16 21:00:11 CST 2019]; root of context hierarchy
2019-03-16 21:00:12,811 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-16 21:00:13,524 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-16 21:00:13,529 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-16 21:00:13,533 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-16 21:00:13,534 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-16 21:00:13,604 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-16 21:00:13,661 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@68eea353: startup date [Sat Mar 16 21:00:11 CST 2019]; root of context hierarchy
2019-03-16 21:00:14,041 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-16 21:00:15,220 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-16 21:00:15,252 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-16 21:00:15,253 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-16 21:00:15,259 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-16 21:00:15,263 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-16 21:00:15,263 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-16 21:00:15,379 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-16 21:00:15,383 INFO [com.wms.Application] - Started Application in 4.694 seconds (JVM running for 5.695)
2019-03-16 21:02:58,309 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@68eea353: startup date [Sat Mar 16 21:00:11 CST 2019]; root of context hierarchy
2019-03-16 21:02:58,312 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-16 21:02:58,313 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-16 21:02:58,327 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-16 21:02:58,327 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:05:22,317 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 6892 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:05:22,319 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:05:22,353 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3c2db5ea: startup date [Mon Mar 18 09:05:22 CST 2019]; root of context hierarchy
2019-03-18 09:05:23,387 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:05:24,277 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:05:24,283 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:05:24,288 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:05:24,289 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:05:24,367 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:05:24,430 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3c2db5ea: startup date [Mon Mar 18 09:05:22 CST 2019]; root of context hierarchy
2019-03-18 09:05:24,850 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:05:25,984 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:05:26,015 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:05:26,016 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:05:26,022 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:05:26,026 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:05:26,026 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:05:26,144 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:05:26,147 INFO [com.wms.Application] - Started Application in 4.603 seconds (JVM running for 6.749)
2019-03-18 09:05:30,664 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3c2db5ea: startup date [Mon Mar 18 09:05:22 CST 2019]; root of context hierarchy
2019-03-18 09:05:30,667 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:05:30,671 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:05:30,688 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:05:30,689 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:05:51,491 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 7046 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:05:51,492 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:05:51,527 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1c68ec9: startup date [Mon Mar 18 09:05:51 CST 2019]; root of context hierarchy
2019-03-18 09:05:52,535 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:05:53,269 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:05:53,276 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:05:53,281 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:05:53,282 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:05:53,360 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:05:53,426 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1c68ec9: startup date [Mon Mar 18 09:05:51 CST 2019]; root of context hierarchy
2019-03-18 09:05:53,806 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:05:54,812 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:05:54,841 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:05:54,842 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:05:54,848 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:05:54,851 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:05:54,852 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:05:54,970 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:05:54,974 INFO [com.wms.Application] - Started Application in 4.491 seconds (JVM running for 5.401)
2019-03-18 09:06:02,744 WARN [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/favicon.ico]: Response status 404 with reason "No matching handler"
2019-03-18 09:06:04,327 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 09:06:09,091 ERROR [org.apache.spark.sql.SparkSession] - 
2019-03-18 09:09:42,730 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1c68ec9: startup date [Mon Mar 18 09:05:51 CST 2019]; root of context hierarchy
2019-03-18 09:09:42,735 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:09:42,746 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:09:42,776 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:09:42,776 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:09:42,935 ERROR [org.apache.spark.sql.SparkSession] - 
2019-03-18 09:09:49,579 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 7611 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:09:49,581 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:09:49,616 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@546dbdc0: startup date [Mon Mar 18 09:09:49 CST 2019]; root of context hierarchy
2019-03-18 09:09:50,564 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:09:51,276 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:09:51,281 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:09:51,289 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:09:51,290 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:09:51,359 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:09:51,420 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@546dbdc0: startup date [Mon Mar 18 09:09:49 CST 2019]; root of context hierarchy
2019-03-18 09:09:51,789 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:09:52,767 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:09:52,813 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:09:52,813 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:09:52,818 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:09:52,821 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:09:52,821 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:09:52,913 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:09:52,917 INFO [com.wms.Application] - Started Application in 4.431 seconds (JVM running for 5.422)
2019-03-18 09:10:24,629 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 09:12:41,331 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@546dbdc0: startup date [Mon Mar 18 09:09:49 CST 2019]; root of context hierarchy
2019-03-18 09:12:41,334 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:12:41,335 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:12:41,344 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:12:41,344 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:19:15,868 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 9824 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:19:15,871 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:19:15,911 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@50fa973b: startup date [Mon Mar 18 09:19:15 CST 2019]; root of context hierarchy
2019-03-18 09:19:16,934 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:19:17,670 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:19:17,677 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:19:17,682 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:19:17,683 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:19:17,755 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:19:17,816 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@50fa973b: startup date [Mon Mar 18 09:19:15 CST 2019]; root of context hierarchy
2019-03-18 09:19:18,087 INFO [org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory] - Server initialized with port: 80
2019-03-18 09:19:18,126 WARN [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is java.lang.NoSuchMethodError: javax.servlet.ServletContext.getServletRegistration(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;
2019-03-18 09:19:18,138 INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 09:19:18,143 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is java.lang.NoSuchMethodError: javax.servlet.ServletContext.getServletRegistration(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:76)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:61)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.wms.Application.main(Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getServletRegistration(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;
	at org.springframework.http.server.reactive.ServletHttpHandlerAdapter.getServletPath(ServletHttpHandlerAdapter.java:130)
	at org.springframework.http.server.reactive.ServletHttpHandlerAdapter.init(ServletHttpHandlerAdapter.java:125)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:670)
	at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:427)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:760)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:374)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:848)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:287)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:138)
	at org.eclipse.jetty.server.Server.start(Server.java:419)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:386)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.springframework.boot.web.embedded.jetty.JettyWebServer.initialize(JettyWebServer.java:107)
	at org.springframework.boot.web.embedded.jetty.JettyWebServer.<init>(JettyWebServer.java:85)
	at org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory.getWebServer(JettyReactiveWebServerFactory.java:103)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.createWebServer(ReactiveWebServerApplicationContext.java:99)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:73)
	... 13 more
2019-03-18 09:20:05,025 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 10158 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:20:05,026 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:20:05,061 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3dee0a3c: startup date [Mon Mar 18 09:20:05 CST 2019]; root of context hierarchy
2019-03-18 09:20:06,110 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:20:06,867 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:20:06,872 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:20:06,877 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:20:06,879 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:20:06,959 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:20:07,017 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3dee0a3c: startup date [Mon Mar 18 09:20:05 CST 2019]; root of context hierarchy
2019-03-18 09:20:07,383 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:20:08,426 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:20:08,457 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:20:08,457 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:20:08,463 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:20:08,466 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:20:08,466 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:20:08,559 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:20:08,563 INFO [com.wms.Application] - Started Application in 4.646 seconds (JVM running for 5.466)
2019-03-18 09:20:15,825 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3dee0a3c: startup date [Mon Mar 18 09:20:05 CST 2019]; root of context hierarchy
2019-03-18 09:20:15,828 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:20:15,829 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:20:15,847 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:20:15,848 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:20:15,996 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 10158 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:20:15,996 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:20:15,999 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@ac147e2: startup date [Mon Mar 18 09:20:15 CST 2019]; root of context hierarchy
2019-03-18 09:20:16,494 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:20:16,596 INFO [org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration] - 

Using generated security password: 7bd0c703-6fcb-44dd-8759-0fae39cac559

2019-03-18 09:20:16,673 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:20:16,674 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:20:16,717 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@ac147e2: startup date [Mon Mar 18 09:20:15 CST 2019]; root of context hierarchy
2019-03-18 09:20:16,798 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:20:17,048 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:20:17,080 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:20:17,081 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:20:17,086 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:20:17,088 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:20:17,088 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:20:17,111 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:20:17,112 INFO [com.wms.Application] - Started Application in 1.19 seconds (JVM running for 14.016)
2019-03-18 09:20:17,119 INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   FreeMarkerReactiveWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactiveUserDetailsServiceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)
      - found ReactiveWebApplicationContext (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.ReactiveAuthenticationManager,org.springframework.security.core.userdetails.ReactiveUserDetailsService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebFluxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)
      - found ReactiveWebApplicationContext (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.config.WebFluxConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebFluxSecurityConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity', 'org.springframework.security.web.server.WebFilterChainProxy'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)
      - found ReactiveWebApplicationContext (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.security.web.server.WebFilterChainProxy; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2019-03-18 09:20:23,470 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@ac147e2: startup date [Mon Mar 18 09:20:15 CST 2019]; root of context hierarchy
2019-03-18 09:20:23,472 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:20:23,474 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:20:23,480 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:20:23,480 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:20:44,925 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 10489 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:20:44,927 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:20:44,981 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@27e40190: startup date [Mon Mar 18 09:20:44 CST 2019]; root of context hierarchy
2019-03-18 09:20:46,487 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:20:47,287 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:20:47,293 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:20:47,299 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:20:47,300 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:20:47,371 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:20:47,446 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@27e40190: startup date [Mon Mar 18 09:20:44 CST 2019]; root of context hierarchy
2019-03-18 09:20:47,815 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:20:48,864 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:20:48,895 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:20:48,896 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:20:48,902 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:20:48,906 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:20:48,906 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:20:48,996 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:20:49,000 INFO [com.wms.Application] - Started Application in 5.148 seconds (JVM running for 5.942)
2019-03-18 09:20:54,450 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-18 09:20:54,498 INFO [org.springframework.jdbc.support.SQLErrorCodesFactory] - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-18 09:21:03,286 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 09:21:06,443 ERROR [org.apache.spark.sql.SparkSession] - Index 10582 out of bounds for length 249
2019-03-18 09:23:03,026 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@27e40190: startup date [Mon Mar 18 09:20:44 CST 2019]; root of context hierarchy
2019-03-18 09:23:03,030 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:23:03,032 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:23:03,044 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:23:03,045 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:23:34,385 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 11262 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:23:34,386 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:23:34,434 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@10638dff: startup date [Mon Mar 18 09:23:34 CST 2019]; root of context hierarchy
2019-03-18 09:23:35,846 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:23:36,719 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:23:36,725 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:23:36,730 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:23:36,731 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:23:36,802 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:23:36,861 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@10638dff: startup date [Mon Mar 18 09:23:34 CST 2019]; root of context hierarchy
2019-03-18 09:23:37,260 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:23:38,286 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:23:38,315 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:23:38,315 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:23:38,321 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:23:38,324 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:23:38,324 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:23:38,414 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:23:38,417 INFO [com.wms.Application] - Started Application in 5.072 seconds (JVM running for 5.939)
2019-03-18 09:23:45,095 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 09:26:27,380 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@10638dff: startup date [Mon Mar 18 09:23:34 CST 2019]; root of context hierarchy
2019-03-18 09:26:27,385 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 09:26:27,387 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 09:26:27,395 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 09:26:27,395 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 09:56:43,265 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 14153 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 09:56:43,266 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 09:56:43,300 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3a8569a1: startup date [Mon Mar 18 09:56:43 CST 2019]; root of context hierarchy
2019-03-18 09:56:44,219 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 09:56:44,941 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 09:56:44,946 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:56:44,953 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 09:56:44,955 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 09:56:45,021 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 09:56:45,079 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3a8569a1: startup date [Mon Mar 18 09:56:43 CST 2019]; root of context hierarchy
2019-03-18 09:56:45,460 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 09:56:46,479 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 09:56:46,506 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 09:56:46,507 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 09:56:46,512 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 09:56:46,515 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 09:56:46,515 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 09:56:46,598 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 09:56:46,602 INFO [com.wms.Application] - Started Application in 4.346 seconds (JVM running for 5.158)
2019-03-18 09:56:54,205 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:01:21,360 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3a8569a1: startup date [Mon Mar 18 09:56:43 CST 2019]; root of context hierarchy
2019-03-18 10:01:21,365 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:01:21,368 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:01:21,381 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:01:21,382 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:01:27,507 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 16199 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:01:27,508 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:01:27,543 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@58772eb6: startup date [Mon Mar 18 10:01:27 CST 2019]; root of context hierarchy
2019-03-18 10:01:28,465 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:01:29,180 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:01:29,186 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:01:29,193 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:01:29,194 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:01:29,261 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:01:29,320 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@58772eb6: startup date [Mon Mar 18 10:01:27 CST 2019]; root of context hierarchy
2019-03-18 10:01:29,700 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:01:30,704 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:01:30,730 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:01:30,731 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:01:30,737 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:01:30,740 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:01:30,740 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:01:30,823 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:01:30,827 INFO [com.wms.Application] - Started Application in 4.39 seconds (JVM running for 5.158)
2019-03-18 10:01:44,901 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:02:50,730 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@58772eb6: startup date [Mon Mar 18 10:01:27 CST 2019]; root of context hierarchy
2019-03-18 10:02:50,735 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:02:50,737 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:02:50,753 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:02:50,754 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:23:49,913 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 19876 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:23:49,914 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:23:49,952 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@578dc404: startup date [Mon Mar 18 10:23:49 CST 2019]; root of context hierarchy
2019-03-18 10:23:50,898 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:23:51,603 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:23:51,609 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:23:51,617 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:23:51,618 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:23:51,687 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:23:51,745 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@578dc404: startup date [Mon Mar 18 10:23:49 CST 2019]; root of context hierarchy
2019-03-18 10:23:52,085 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:23:53,086 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:23:53,112 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:23:53,112 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:23:53,117 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:23:53,121 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:23:53,121 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:23:53,210 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:23:53,214 INFO [com.wms.Application] - Started Application in 4.278 seconds (JVM running for 5.103)
2019-03-18 10:24:07,019 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:27:04,802 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@578dc404: startup date [Mon Mar 18 10:23:49 CST 2019]; root of context hierarchy
2019-03-18 10:27:04,805 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:27:04,807 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:27:04,819 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:27:04,819 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:27:18,622 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 20357 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:27:18,623 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:27:18,656 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1ae1c8dc: startup date [Mon Mar 18 10:27:18 CST 2019]; root of context hierarchy
2019-03-18 10:27:19,587 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:27:20,260 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:27:20,265 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:27:20,274 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:27:20,275 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:27:20,359 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:27:20,420 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1ae1c8dc: startup date [Mon Mar 18 10:27:18 CST 2019]; root of context hierarchy
2019-03-18 10:27:20,810 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:27:21,851 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:27:21,878 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:27:21,878 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:27:21,884 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:27:21,887 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:27:21,887 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:27:21,970 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:27:21,973 INFO [com.wms.Application] - Started Application in 4.315 seconds (JVM running for 5.144)
2019-03-18 10:27:29,535 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:29:50,591 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1ae1c8dc: startup date [Mon Mar 18 10:27:18 CST 2019]; root of context hierarchy
2019-03-18 10:29:50,594 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:29:50,596 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:29:50,608 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:29:50,608 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:30:04,541 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 21265 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:30:04,542 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:30:04,586 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3f09b540: startup date [Mon Mar 18 10:30:04 CST 2019]; root of context hierarchy
2019-03-18 10:30:05,523 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:30:06,249 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:30:06,255 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:30:06,267 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:30:06,268 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:30:06,344 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:30:06,402 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3f09b540: startup date [Mon Mar 18 10:30:04 CST 2019]; root of context hierarchy
2019-03-18 10:30:06,765 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:30:07,781 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:30:07,808 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:30:07,809 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:30:07,814 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:30:07,817 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:30:07,817 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:30:07,907 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:30:07,910 INFO [com.wms.Application] - Started Application in 4.401 seconds (JVM running for 5.229)
2019-03-18 10:30:15,086 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:33:13,067 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3f09b540: startup date [Mon Mar 18 10:30:04 CST 2019]; root of context hierarchy
2019-03-18 10:33:13,069 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:33:13,071 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:33:13,086 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:33:13,087 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:33:18,791 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 22013 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:33:18,793 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:33:18,830 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6de4b3f3: startup date [Mon Mar 18 10:33:18 CST 2019]; root of context hierarchy
2019-03-18 10:33:19,754 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:33:20,442 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:33:20,448 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:33:20,461 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:33:20,462 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:33:20,533 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:33:20,593 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6de4b3f3: startup date [Mon Mar 18 10:33:18 CST 2019]; root of context hierarchy
2019-03-18 10:33:20,974 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:33:22,032 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:33:22,066 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:33:22,066 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:33:22,072 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:33:22,076 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:33:22,076 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:33:22,194 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:33:22,197 INFO [com.wms.Application] - Started Application in 4.323 seconds (JVM running for 5.086)
2019-03-18 10:33:32,372 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6de4b3f3: startup date [Mon Mar 18 10:33:18 CST 2019]; root of context hierarchy
2019-03-18 10:33:32,376 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:33:32,378 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:33:32,396 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:33:32,396 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:35:52,408 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 22244 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:35:52,410 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:35:52,458 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@271bd2c5: startup date [Mon Mar 18 10:35:52 CST 2019]; root of context hierarchy
2019-03-18 10:35:53,458 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:35:54,187 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:35:54,194 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:35:54,207 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:35:54,208 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:35:54,293 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:35:54,364 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@271bd2c5: startup date [Mon Mar 18 10:35:52 CST 2019]; root of context hierarchy
2019-03-18 10:35:54,778 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:35:55,794 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:35:55,820 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:35:55,821 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:35:55,827 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:35:55,830 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:35:55,830 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:35:55,915 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:35:55,918 INFO [com.wms.Application] - Started Application in 4.45 seconds (JVM running for 5.342)
2019-03-18 10:36:02,307 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:41:56,427 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@271bd2c5: startup date [Mon Mar 18 10:35:52 CST 2019]; root of context hierarchy
2019-03-18 10:41:56,430 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:41:56,432 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:41:56,444 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:41:56,447 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:42:01,472 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 22888 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:42:01,473 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:42:01,508 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@20b881da: startup date [Mon Mar 18 10:42:01 CST 2019]; root of context hierarchy
2019-03-18 10:42:02,442 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:42:03,184 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:42:03,191 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:42:03,203 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:42:03,205 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:42:03,282 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:42:03,348 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@20b881da: startup date [Mon Mar 18 10:42:01 CST 2019]; root of context hierarchy
2019-03-18 10:42:03,714 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:42:04,793 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:42:04,821 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:42:04,822 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:42:04,828 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:42:04,831 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:42:04,831 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:42:04,935 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:42:04,939 INFO [com.wms.Application] - Started Application in 4.391 seconds (JVM running for 5.171)
2019-03-18 10:42:24,978 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:42:26,038 ERROR [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/console/index]
java.lang.IllegalArgumentException: requirement failed: No output operations registered, so nothing to execute
	at scala.Predef$.require(Predef.scala:277)
	at org.apache.spark.streaming.DStreamGraph.validate(DStreamGraph.scala:168)
	at org.apache.spark.streaming.StreamingContext.validate(StreamingContext.scala:513)
	at org.apache.spark.streaming.StreamingContext.liftedTree1$1(StreamingContext.scala:573)
	at org.apache.spark.streaming.StreamingContext.start(StreamingContext.scala:572)
	at com.wms.spark.SparkSessionUtil.makeStream(SparkSessionUtil.scala:36)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.wms.core.interceptor.GetMappingInterceptor.doExecute(GetMappingInterceptor.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.ui.example.controller.Example2$$EnhancerBySpringCGLIB$$e28da914.hello(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:77)
	at reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2073)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:198)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:198)
	|_	Mono.then(RequestMappingHandlerAdapter.java:198)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:199)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:200)
	|_	Mono.error(RequestMappingHandlerAdapter.java:230)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:201)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.switchIfEmpty(AuthorizationWebFilter.java:46)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.subscribe(UndertowHttpHandlerAdapter.java:87)
	|_	Mono.onErrorResume(ExceptionTranslationWebFilter.java:43)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(LogoutWebFilter.java:56)
	|_	Mono.switchIfEmpty(LogoutWebFilter.java:56)
	|_	Mono.map(LogoutWebFilter.java:57)
	|_	Mono.flatMap(LogoutWebFilter.java:58)
	|_	Mono.flatMap(LogoutWebFilter.java:59)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(ServerRequestCacheWebFilter.java:39)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(WebFilterChainProxy.java:58)
	|_	Mono.defer(DefaultWebFilterChain.java:72)

2019-03-18 10:45:03,680 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@20b881da: startup date [Mon Mar 18 10:42:01 CST 2019]; root of context hierarchy
2019-03-18 10:45:03,684 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:45:03,685 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:45:03,699 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:45:03,700 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:50:50,136 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 24189 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:50:50,137 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:50:50,168 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6f6931e5: startup date [Mon Mar 18 10:50:50 CST 2019]; root of context hierarchy
2019-03-18 10:50:51,108 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:50:51,926 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:50:51,932 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:50:51,939 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:50:51,940 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:50:52,008 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:50:52,072 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6f6931e5: startup date [Mon Mar 18 10:50:50 CST 2019]; root of context hierarchy
2019-03-18 10:50:52,446 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:50:53,532 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:50:53,566 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:50:53,567 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:50:53,572 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:50:53,576 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:50:53,576 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:50:53,659 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:50:53,663 INFO [com.wms.Application] - Started Application in 4.447 seconds (JVM running for 5.301)
2019-03-18 10:50:59,006 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:51:00,238 ERROR [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/console/index]
java.lang.IllegalArgumentException: requirement failed: No output operations registered, so nothing to execute
	at scala.Predef$.require(Predef.scala:277)
	at org.apache.spark.streaming.DStreamGraph.validate(DStreamGraph.scala:168)
	at org.apache.spark.streaming.StreamingContext.validate(StreamingContext.scala:513)
	at org.apache.spark.streaming.StreamingContext.liftedTree1$1(StreamingContext.scala:573)
	at org.apache.spark.streaming.StreamingContext.start(StreamingContext.scala:572)
	at com.wms.spark.SparkSessionUtil.makeStream(SparkSessionUtil.scala:57)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.wms.core.interceptor.GetMappingInterceptor.doExecute(GetMappingInterceptor.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.ui.example.controller.Example2$$EnhancerBySpringCGLIB$$1d7cd5ac.hello(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:77)
	at reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2073)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:198)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:198)
	|_	Mono.then(RequestMappingHandlerAdapter.java:198)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:199)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:200)
	|_	Mono.error(RequestMappingHandlerAdapter.java:230)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:201)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.switchIfEmpty(AuthorizationWebFilter.java:46)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.subscribe(UndertowHttpHandlerAdapter.java:87)
	|_	Mono.onErrorResume(ExceptionTranslationWebFilter.java:43)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(LogoutWebFilter.java:56)
	|_	Mono.switchIfEmpty(LogoutWebFilter.java:56)
	|_	Mono.map(LogoutWebFilter.java:57)
	|_	Mono.flatMap(LogoutWebFilter.java:58)
	|_	Mono.flatMap(LogoutWebFilter.java:59)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(ServerRequestCacheWebFilter.java:39)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(WebFilterChainProxy.java:58)
	|_	Mono.defer(DefaultWebFilterChain.java:72)

2019-03-18 10:52:49,204 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6f6931e5: startup date [Mon Mar 18 10:50:50 CST 2019]; root of context hierarchy
2019-03-18 10:52:49,207 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:52:49,209 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:52:49,219 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:52:49,221 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 10:52:54,855 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 24639 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 10:52:54,856 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 10:52:54,891 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@708beb86: startup date [Mon Mar 18 10:52:54 CST 2019]; root of context hierarchy
2019-03-18 10:52:55,803 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 10:52:56,561 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 10:52:56,568 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:52:56,577 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 10:52:56,578 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 10:52:56,668 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 10:52:56,755 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@708beb86: startup date [Mon Mar 18 10:52:54 CST 2019]; root of context hierarchy
2019-03-18 10:52:57,242 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 10:52:58,626 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 10:52:58,652 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 10:52:58,653 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 10:52:58,660 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 10:52:58,663 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 10:52:58,663 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 10:52:58,747 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 10:52:58,752 INFO [com.wms.Application] - Started Application in 4.822 seconds (JVM running for 5.627)
2019-03-18 10:53:05,620 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 10:53:53,798 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@708beb86: startup date [Mon Mar 18 10:52:54 CST 2019]; root of context hierarchy
2019-03-18 10:53:53,803 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 10:53:53,806 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 10:53:53,825 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 10:53:53,826 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:01:11,837 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 25990 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:01:11,838 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:01:11,879 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2762f6f3: startup date [Mon Mar 18 11:01:11 CST 2019]; root of context hierarchy
2019-03-18 11:01:12,866 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:01:13,589 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:01:13,594 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:01:13,602 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:01:13,603 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:01:13,671 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:01:13,732 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2762f6f3: startup date [Mon Mar 18 11:01:11 CST 2019]; root of context hierarchy
2019-03-18 11:01:14,091 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:01:15,094 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:01:15,120 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:01:15,121 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:01:15,126 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:01:15,129 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:01:15,129 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:01:15,210 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:01:15,214 INFO [com.wms.Application] - Started Application in 4.35 seconds (JVM running for 5.17)
2019-03-18 11:01:21,090 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 11:01:22,104 ERROR [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/console/index]
java.util.NoSuchElementException: spark.app.id
	at org.apache.spark.SparkConf.$anonfun$get$1(SparkConf.scala:245)
	at scala.Option.getOrElse(Option.scala:121)
	at org.apache.spark.SparkConf.get(SparkConf.scala:245)
	at org.apache.spark.SparkConf.getAppId(SparkConf.scala:451)
	at com.wms.spark.SparkSessionUtil.makeStream(SparkSessionUtil.scala:39)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.wms.core.interceptor.GetMappingInterceptor.doExecute(GetMappingInterceptor.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.ui.example.controller.Example2$$EnhancerBySpringCGLIB$$6db232d9.hello(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:77)
	at reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2073)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:198)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:198)
	|_	Mono.then(RequestMappingHandlerAdapter.java:198)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:199)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:200)
	|_	Mono.error(RequestMappingHandlerAdapter.java:230)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:201)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.switchIfEmpty(AuthorizationWebFilter.java:46)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.subscribe(UndertowHttpHandlerAdapter.java:87)
	|_	Mono.onErrorResume(ExceptionTranslationWebFilter.java:43)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(LogoutWebFilter.java:56)
	|_	Mono.switchIfEmpty(LogoutWebFilter.java:56)
	|_	Mono.map(LogoutWebFilter.java:57)
	|_	Mono.flatMap(LogoutWebFilter.java:58)
	|_	Mono.flatMap(LogoutWebFilter.java:59)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(ServerRequestCacheWebFilter.java:39)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(WebFilterChainProxy.java:58)
	|_	Mono.defer(DefaultWebFilterChain.java:72)

2019-03-18 11:01:46,598 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2762f6f3: startup date [Mon Mar 18 11:01:11 CST 2019]; root of context hierarchy
2019-03-18 11:01:46,601 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:01:46,603 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:01:46,619 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:01:46,620 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:02:27,802 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 26338 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:02:27,804 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:02:27,840 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@46dc499b: startup date [Mon Mar 18 11:02:27 CST 2019]; root of context hierarchy
2019-03-18 11:02:28,786 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:02:29,486 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:02:29,492 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:02:29,500 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:02:29,501 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:02:29,574 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:02:29,636 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@46dc499b: startup date [Mon Mar 18 11:02:27 CST 2019]; root of context hierarchy
2019-03-18 11:02:30,000 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:02:31,002 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:02:31,028 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:02:31,029 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:02:31,034 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:02:31,038 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:02:31,038 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:02:31,120 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:02:31,123 INFO [com.wms.Application] - Started Application in 4.255 seconds (JVM running for 5.049)
2019-03-18 11:02:36,532 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 11:02:38,236 ERROR [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/console/index]
org.apache.kafka.common.config.ConfigException: Invalid value None for configuration group.id: Expected value to be a string, but it was a scala.None$
	at org.apache.kafka.common.config.ConfigDef.parseType(ConfigDef.java:659)
	at org.apache.kafka.common.config.ConfigDef.parseValue(ConfigDef.java:460)
	at org.apache.kafka.common.config.ConfigDef.parse(ConfigDef.java:453)
	at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:62)
	at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:75)
	at org.apache.kafka.clients.consumer.ConsumerConfig.<init>(ConsumerConfig.java:481)
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:608)
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:589)
	at org.apache.spark.streaming.kafka010.Subscribe.onStart(ConsumerStrategy.scala:84)
	at org.apache.spark.streaming.kafka010.DirectKafkaInputDStream.consumer(DirectKafkaInputDStream.scala:73)
	at org.apache.spark.streaming.kafka010.DirectKafkaInputDStream.start(DirectKafkaInputDStream.scala:259)
	at org.apache.spark.streaming.DStreamGraph.$anonfun$start$7(DStreamGraph.scala:54)
	at org.apache.spark.streaming.DStreamGraph.$anonfun$start$7$adapted(DStreamGraph.scala:54)
	at scala.collection.parallel.mutable.ParArray$ParArrayIterator.foreach(ParArray.scala:142)
	at scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:970)
	at scala.collection.parallel.Task.$anonfun$tryLeaf$1(Tasks.scala:49)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.control.Breaks$$anon$1.catchBreak(Breaks.scala:63)
	at scala.collection.parallel.Task.tryLeaf(Tasks.scala:52)
	at scala.collection.parallel.Task.tryLeaf$(Tasks.scala:46)
	at scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:967)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute(Tasks.scala:149)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute$(Tasks.scala:145)
	at scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:436)
	at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
	at ... run in separate thread using org.apache.spark.util.ThreadUtils ... ()
	at org.apache.spark.streaming.StreamingContext.liftedTree1$1(StreamingContext.scala:578)
	at org.apache.spark.streaming.StreamingContext.start(StreamingContext.scala:572)
	at com.wms.spark.SparkSessionUtil.makeStream(SparkSessionUtil.scala:55)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.wms.core.interceptor.GetMappingInterceptor.doExecute(GetMappingInterceptor.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.ui.example.controller.Example2$$EnhancerBySpringCGLIB$$d090da55.hello(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:77)
	at reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2073)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:198)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:198)
	|_	Mono.then(RequestMappingHandlerAdapter.java:198)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:199)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:200)
	|_	Mono.error(RequestMappingHandlerAdapter.java:230)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:201)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.switchIfEmpty(AuthorizationWebFilter.java:46)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.subscribe(UndertowHttpHandlerAdapter.java:87)
	|_	Mono.onErrorResume(ExceptionTranslationWebFilter.java:43)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(LogoutWebFilter.java:56)
	|_	Mono.switchIfEmpty(LogoutWebFilter.java:56)
	|_	Mono.map(LogoutWebFilter.java:57)
	|_	Mono.flatMap(LogoutWebFilter.java:58)
	|_	Mono.flatMap(LogoutWebFilter.java:59)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(ServerRequestCacheWebFilter.java:39)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(WebFilterChainProxy.java:58)
	|_	Mono.defer(DefaultWebFilterChain.java:72)

2019-03-18 11:03:58,681 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@46dc499b: startup date [Mon Mar 18 11:02:27 CST 2019]; root of context hierarchy
2019-03-18 11:03:58,684 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:03:58,686 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:03:58,699 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:03:58,700 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:04:03,702 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 26799 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:04:03,703 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:04:03,741 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@61e3057f: startup date [Mon Mar 18 11:04:03 CST 2019]; root of context hierarchy
2019-03-18 11:04:04,741 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:04:05,477 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:04:05,482 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:04:05,490 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:04:05,491 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:04:05,561 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:04:05,623 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@61e3057f: startup date [Mon Mar 18 11:04:03 CST 2019]; root of context hierarchy
2019-03-18 11:04:05,986 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:04:07,011 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:04:07,038 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:04:07,038 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:04:07,044 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:04:07,047 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:04:07,048 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:04:07,147 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:04:07,151 INFO [com.wms.Application] - Started Application in 4.46 seconds (JVM running for 5.363)
2019-03-18 11:04:13,930 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 11:04:15,546 ERROR [org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler] - Failed to handle request [GET http://localhost/console/index]
org.apache.kafka.common.config.ConfigException: Invalid value Some(com.wms.ui.example.controller.Example2hello2019-03-18 11:04:13) for configuration group.id: Expected value to be a string, but it was a scala.Some
	at org.apache.kafka.common.config.ConfigDef.parseType(ConfigDef.java:659)
	at org.apache.kafka.common.config.ConfigDef.parseValue(ConfigDef.java:460)
	at org.apache.kafka.common.config.ConfigDef.parse(ConfigDef.java:453)
	at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:62)
	at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:75)
	at org.apache.kafka.clients.consumer.ConsumerConfig.<init>(ConsumerConfig.java:481)
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:608)
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:589)
	at org.apache.spark.streaming.kafka010.Subscribe.onStart(ConsumerStrategy.scala:84)
	at org.apache.spark.streaming.kafka010.DirectKafkaInputDStream.consumer(DirectKafkaInputDStream.scala:73)
	at org.apache.spark.streaming.kafka010.DirectKafkaInputDStream.start(DirectKafkaInputDStream.scala:259)
	at org.apache.spark.streaming.DStreamGraph.$anonfun$start$7(DStreamGraph.scala:54)
	at org.apache.spark.streaming.DStreamGraph.$anonfun$start$7$adapted(DStreamGraph.scala:54)
	at scala.collection.parallel.mutable.ParArray$ParArrayIterator.foreach(ParArray.scala:142)
	at scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:970)
	at scala.collection.parallel.Task.$anonfun$tryLeaf$1(Tasks.scala:49)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.control.Breaks$$anon$1.catchBreak(Breaks.scala:63)
	at scala.collection.parallel.Task.tryLeaf(Tasks.scala:52)
	at scala.collection.parallel.Task.tryLeaf$(Tasks.scala:46)
	at scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:967)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute(Tasks.scala:149)
	at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask.compute$(Tasks.scala:145)
	at scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:436)
	at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
	at ... run in separate thread using org.apache.spark.util.ThreadUtils ... ()
	at org.apache.spark.streaming.StreamingContext.liftedTree1$1(StreamingContext.scala:578)
	at org.apache.spark.streaming.StreamingContext.start(StreamingContext.scala:572)
	at com.wms.spark.SparkSessionUtil.makeStream(SparkSessionUtil.scala:55)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.wms.core.interceptor.GetMappingInterceptor.doExecute(GetMappingInterceptor.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.ui.example.controller.Example2$$EnhancerBySpringCGLIB$$16590029.hello(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:247)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	at reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:247)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:77)
	at reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2073)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:198)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:457)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:35)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:432)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:366)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:104)
	reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:262)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:398)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoProcessor.add(MonoProcessor.java:531)
	reactor.core.publisher.MonoProcessor.subscribe(MonoProcessor.java:444)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:78)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1642)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onComplete(FluxFilterFuseable.java:151)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:266)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:47)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:141)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:161)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:76)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoFilter.subscribe(MonoFilter.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:117)
	reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:334)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:199)
	reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onSubscribe(MonoCollectList.java:90)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:287)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:131)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:244)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:202)
	reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:190)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:140)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterWhen.subscribe(FluxFilterWhen.java:68)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87)
	io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)
	io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136)
	io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59)
	org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	org.xnio.nio.WorkerThread.run(WorkerThread.java:561)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:198)
	|_	Mono.then(RequestMappingHandlerAdapter.java:198)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:199)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:200)
	|_	Mono.error(RequestMappingHandlerAdapter.java:230)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:201)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.switchIfEmpty(AuthorizationWebFilter.java:46)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.subscribe(UndertowHttpHandlerAdapter.java:87)
	|_	Mono.onErrorResume(ExceptionTranslationWebFilter.java:43)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(LogoutWebFilter.java:56)
	|_	Mono.switchIfEmpty(LogoutWebFilter.java:56)
	|_	Mono.map(LogoutWebFilter.java:57)
	|_	Mono.flatMap(LogoutWebFilter.java:58)
	|_	Mono.flatMap(LogoutWebFilter.java:59)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(ServerRequestCacheWebFilter.java:39)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.then(AuthenticationWebFilter.java:92)
	|_	Mono.switchIfEmpty(AuthenticationWebFilter.java:92)
	|_	Mono.flatMap(AuthenticationWebFilter.java:93)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.defer(DefaultWebFilterChain.java:72)
	|_	Mono.flatMap(WebFilterChainProxy.java:58)
	|_	Mono.defer(DefaultWebFilterChain.java:72)

2019-03-18 11:04:29,354 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@61e3057f: startup date [Mon Mar 18 11:04:03 CST 2019]; root of context hierarchy
2019-03-18 11:04:29,357 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:04:29,359 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:04:29,370 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:04:29,371 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:04:34,281 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 27083 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:04:34,282 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:04:34,316 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5f9054b5: startup date [Mon Mar 18 11:04:34 CST 2019]; root of context hierarchy
2019-03-18 11:04:35,235 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:04:35,982 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:04:35,988 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:04:35,995 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:04:35,996 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:04:36,073 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:04:36,137 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5f9054b5: startup date [Mon Mar 18 11:04:34 CST 2019]; root of context hierarchy
2019-03-18 11:04:36,510 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:04:37,559 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:04:37,589 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:04:37,590 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:04:37,595 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:04:37,599 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:04:37,599 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:04:37,679 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:04:37,683 INFO [com.wms.Application] - Started Application in 4.394 seconds (JVM running for 5.177)
2019-03-18 11:04:43,320 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 11:05:02,204 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5f9054b5: startup date [Mon Mar 18 11:04:34 CST 2019]; root of context hierarchy
2019-03-18 11:05:02,211 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:05:02,213 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:05:02,227 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:05:02,228 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:29:42,788 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 28706 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:29:42,789 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:29:42,825 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3561a37d: startup date [Mon Mar 18 11:29:42 CST 2019]; root of context hierarchy
2019-03-18 11:29:43,814 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:29:44,855 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:29:44,864 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:29:44,876 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:29:44,878 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:29:44,963 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:29:45,029 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3561a37d: startup date [Mon Mar 18 11:29:42 CST 2019]; root of context hierarchy
2019-03-18 11:29:45,470 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:29:46,550 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:29:46,580 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:29:46,581 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:29:46,587 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:29:46,590 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:29:46,590 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:29:46,683 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:29:46,687 INFO [com.wms.Application] - Started Application in 4.931 seconds (JVM running for 5.797)
2019-03-18 11:29:51,989 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3561a37d: startup date [Mon Mar 18 11:29:42 CST 2019]; root of context hierarchy
2019-03-18 11:29:51,992 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:29:51,993 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:29:52,007 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:29:52,007 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:30:38,492 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 29070 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:30:38,494 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:30:38,532 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@324e68ee: startup date [Mon Mar 18 11:30:38 CST 2019]; root of context hierarchy
2019-03-18 11:30:39,525 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:30:40,238 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:30:40,243 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:30:40,250 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:30:40,251 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:30:40,332 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:30:40,386 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@324e68ee: startup date [Mon Mar 18 11:30:38 CST 2019]; root of context hierarchy
2019-03-18 11:30:40,675 INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 80 (http)
2019-03-18 11:30:40,757 WARN [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2019-03-18 11:30:40,769 INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 11:30:40,773 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.context.ApplicationContextException: Unable to start reactive web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:76)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:61)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.wms.Application.main(Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory.getWebServer(TomcatReactiveWebServerFactory.java:112)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.createWebServer(ReactiveWebServerApplicationContext.java:99)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.onRefresh(ReactiveWebServerApplicationContext.java:73)
	... 13 more
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	... 17 more
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 19 more
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 21 more
Caused by: org.apache.catalina.LifecycleException: A child container failed during start
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:949)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 23 more
2019-03-18 11:32:55,789 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 29564 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:32:55,790 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:32:55,826 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@643b3c5f: startup date [Mon Mar 18 11:32:55 CST 2019]; root of context hierarchy
2019-03-18 11:32:56,794 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:32:57,497 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:32:57,503 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:32:57,510 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:32:57,511 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:32:57,583 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:32:57,644 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@643b3c5f: startup date [Mon Mar 18 11:32:55 CST 2019]; root of context hierarchy
2019-03-18 11:32:58,023 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:32:59,036 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:32:59,064 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:32:59,064 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:32:59,070 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:32:59,073 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:32:59,073 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:32:59,156 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:32:59,160 INFO [com.wms.Application] - Started Application in 4.409 seconds (JVM running for 5.275)
2019-03-18 11:33:04,677 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@643b3c5f: startup date [Mon Mar 18 11:32:55 CST 2019]; root of context hierarchy
2019-03-18 11:33:04,680 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:33:04,682 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:33:04,696 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:33:04,697 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:42:32,224 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 30454 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:42:32,226 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:42:32,262 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2cef5754: startup date [Mon Mar 18 11:42:32 CST 2019]; root of context hierarchy
2019-03-18 11:42:33,247 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:42:33,942 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:42:33,947 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:42:33,954 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:42:33,955 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:42:34,033 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:42:34,094 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2cef5754: startup date [Mon Mar 18 11:42:32 CST 2019]; root of context hierarchy
2019-03-18 11:42:34,451 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:42:35,455 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:42:35,482 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:42:35,482 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:42:35,487 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:42:35,490 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:42:35,490 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:42:35,592 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:42:35,595 INFO [com.wms.Application] - Started Application in 4.315 seconds (JVM running for 5.09)
2019-03-18 11:42:47,690 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 11:44:04,398 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2cef5754: startup date [Mon Mar 18 11:42:32 CST 2019]; root of context hierarchy
2019-03-18 11:44:04,405 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:44:04,407 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:44:04,420 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:44:04,421 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:45:57,052 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 31251 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:45:57,054 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:45:57,089 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1bccafed: startup date [Mon Mar 18 11:45:57 CST 2019]; root of context hierarchy
2019-03-18 11:45:58,054 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:45:58,760 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:45:58,765 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:45:58,770 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:45:58,771 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:45:58,842 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:45:58,904 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1bccafed: startup date [Mon Mar 18 11:45:57 CST 2019]; root of context hierarchy
2019-03-18 11:45:59,272 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:46:00,289 INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2019-03-18 11:46:00,333 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2019-03-18 11:46:00,333 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:46:00,338 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2019-03-18 11:46:00,341 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2019-03-18 11:46:00,341 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2019-03-18 11:46:00,432 INFO [org.springframework.boot.web.embedded.undertow.UndertowServletWebServer] - Undertow started on port(s) 80 (http)
2019-03-18 11:46:00,436 INFO [com.wms.Application] - Started Application in 4.41 seconds (JVM running for 5.291)
2019-03-18 11:46:34,336 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1bccafed: startup date [Mon Mar 18 11:45:57 CST 2019]; root of context hierarchy
2019-03-18 11:46:34,340 INFO [org.springframework.context.support.DefaultLifecycleProcessor] - Stopping beans in phase 2147483647
2019-03-18 11:46:34,341 INFO [org.springframework.scheduling.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2019-03-18 11:46:34,355 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
2019-03-18 11:46:34,356 INFO [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
2019-03-18 11:49:10,871 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 31796 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:49:10,872 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:49:10,902 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@548f9319: startup date [Mon Mar 18 11:49:10 CST 2019]; root of context hierarchy
2019-03-18 11:49:11,821 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:49:12,554 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:49:12,561 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:49:12,566 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:49:12,567 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:49:12,653 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:49:12,725 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@548f9319: startup date [Mon Mar 18 11:49:10 CST 2019]; root of context hierarchy
2019-03-18 11:49:13,133 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:49:13,145 WARN [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initStream' defined in com.wms.Application: Invalid factory method 'initStream': needs to have a non-void return type!
2019-03-18 11:49:13,155 INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 11:49:13,159 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initStream' defined in com.wms.Application: Invalid factory method 'initStream': needs to have a non-void return type!
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:61)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.wms.Application.main(Application.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2019-03-18 11:50:24,060 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 31990 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:50:24,062 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:50:24,100 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@28bd3391: startup date [Mon Mar 18 11:50:24 CST 2019]; root of context hierarchy
2019-03-18 11:50:25,067 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:50:25,765 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:50:25,782 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:50:25,787 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:50:25,788 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:50:25,857 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:50:25,915 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@28bd3391: startup date [Mon Mar 18 11:50:24 CST 2019]; root of context hierarchy
2019-03-18 11:50:26,273 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:50:26,290 WARN [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initStream' defined in com.wms.Application: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Factory method 'initStream' threw exception; nested exception is java.lang.ClassCastException: class com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 cannot be cast to class com.wms.core.ui.AbstractController (com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 and com.wms.core.ui.AbstractController are in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @62916733)
2019-03-18 11:50:26,300 INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 11:50:26,304 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initStream' defined in com.wms.Application: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Factory method 'initStream' threw exception; nested exception is java.lang.ClassCastException: class com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 cannot be cast to class com.wms.core.ui.AbstractController (com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 and com.wms.core.ui.AbstractController are in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @62916733)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:61)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.wms.Application.main(Application.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Factory method 'initStream' threw exception; nested exception is java.lang.ClassCastException: class com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 cannot be cast to class com.wms.core.ui.AbstractController (com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 and com.wms.core.ui.AbstractController are in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @62916733)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 23 more
Caused by: java.lang.ClassCastException: class com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 cannot be cast to class com.wms.core.ui.AbstractController (com.wms.Application$$EnhancerBySpringCGLIB$$98bc08a0 and com.wms.core.ui.AbstractController are in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @62916733)
	at com.wms.core.interceptor.StreamingContextInterceptor.doSparkSession(StreamingContextInterceptor.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wms.Application$$EnhancerBySpringCGLIB$$8f0e822e.initStream(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 24 more
2019-03-18 11:51:52,573 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 32254 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 11:51:52,574 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 11:51:52,608 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1cdfe913: startup date [Mon Mar 18 11:51:52 CST 2019]; root of context hierarchy
2019-03-18 11:51:53,600 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 11:51:54,355 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 11:51:54,360 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:51:54,364 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 11:51:54,365 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 11:51:54,435 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 11:51:54,510 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1cdfe913: startup date [Mon Mar 18 11:51:52 CST 2019]; root of context hierarchy
2019-03-18 11:51:54,871 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 11:51:55,287 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:13:18,736 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 2265 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:13:18,738 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:13:18,784 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6d34094e: startup date [Mon Mar 18 14:13:18 CST 2019]; root of context hierarchy
2019-03-18 14:13:20,027 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:13:20,738 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:13:20,744 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:13:20,748 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:13:20,749 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:13:20,818 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:13:20,889 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6d34094e: startup date [Mon Mar 18 14:13:18 CST 2019]; root of context hierarchy
2019-03-18 14:13:21,250 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:13:21,676 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:25:30,288 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 5214 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:25:30,290 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:25:30,328 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@72d55c02: startup date [Mon Mar 18 14:25:30 CST 2019]; root of context hierarchy
2019-03-18 14:25:31,307 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:25:32,035 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:25:32,041 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:25:32,045 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:25:32,046 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:25:32,133 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:25:32,200 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@72d55c02: startup date [Mon Mar 18 14:25:30 CST 2019]; root of context hierarchy
2019-03-18 14:25:32,615 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:25:33,040 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:31:02,619 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 7515 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:31:02,620 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:31:02,655 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2d054270: startup date [Mon Mar 18 14:31:02 CST 2019]; root of context hierarchy
2019-03-18 14:31:03,647 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:31:04,342 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:31:04,347 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:31:04,351 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:31:04,352 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:31:04,439 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:31:04,505 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2d054270: startup date [Mon Mar 18 14:31:02 CST 2019]; root of context hierarchy
2019-03-18 14:31:04,897 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:31:05,328 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:40:03,819 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 10649 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:40:03,820 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:40:03,854 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@165da4ee: startup date [Mon Mar 18 14:40:03 CST 2019]; root of context hierarchy
2019-03-18 14:40:04,813 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:40:05,545 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:40:05,552 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:40:05,558 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:40:05,559 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:40:05,645 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:40:05,706 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@165da4ee: startup date [Mon Mar 18 14:40:03 CST 2019]; root of context hierarchy
2019-03-18 14:40:06,108 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:40:06,531 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:40:37,757 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 11030 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:40:37,758 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:40:37,790 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@4508fb24: startup date [Mon Mar 18 14:40:37 CST 2019]; root of context hierarchy
2019-03-18 14:40:38,679 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:40:39,386 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:40:39,392 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:40:39,396 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:40:39,397 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:40:39,462 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:40:39,520 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@4508fb24: startup date [Mon Mar 18 14:40:37 CST 2019]; root of context hierarchy
2019-03-18 14:40:39,945 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:40:40,361 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:42:23,131 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 11885 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:42:23,132 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:42:23,163 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@51b975bc: startup date [Mon Mar 18 14:42:23 CST 2019]; root of context hierarchy
2019-03-18 14:42:24,067 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:42:24,771 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:42:24,776 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:42:24,781 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:42:24,782 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:42:24,855 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:42:24,916 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@51b975bc: startup date [Mon Mar 18 14:42:23 CST 2019]; root of context hierarchy
2019-03-18 14:42:25,301 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:42:25,739 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2019-03-18 14:59:02,449 INFO [com.wms.Application] - Starting Application on dudu-pc with PID 15488 (/opt/panda-with-spark/out/production/classes started by root in /opt/panda-with-spark)
2019-03-18 14:59:02,450 INFO [com.wms.Application] - No active profile set, falling back to default profiles: default
2019-03-18 14:59:02,484 INFO [org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext] - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@23fbeb4b: startup date [Mon Mar 18 14:59:02 CST 2019]; root of context hierarchy
2019-03-18 14:59:03,535 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-18 14:59:04,247 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/login]}" onto java.lang.String com.wms.ui.example.controller.Example.login()
2019-03-18 14:59:04,253 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/manage/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example1.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:59:04,258 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/console/index],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.Example2.hello(org.springframework.web.server.ServerWebExchange,java.security.Principal)
2019-03-18 14:59:04,259 INFO [org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/token/get],methods=[GET]}" onto public reactor.core.publisher.Mono<java.lang.String> com.wms.ui.example.controller.TokenController.getToken(org.springframework.web.server.ServerWebExchange)
2019-03-18 14:59:04,332 INFO [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping] - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
2019-03-18 14:59:04,409 INFO [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver] - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@23fbeb4b: startup date [Mon Mar 18 14:59:02 CST 2019]; root of context hierarchy
2019-03-18 14:59:04,767 INFO [org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-18 14:59:05,188 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
